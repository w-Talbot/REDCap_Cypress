{
  "stats": {
    "suites": 9,
    "tests": 22,
    "passes": 22,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-15T12:04:12.420Z",
    "end": "2021-03-15T12:04:42.340Z",
    "duration": 29920,
    "testsRegistered": 22,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7b0ac32-3f55-464d-bbb3-4b39e151bc82",
      "title": "",
      "fullFile": "cypress\\integration\\core\\project\\temp_test.js",
      "file": "cypress\\integration\\core\\project\\temp_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a29bd61-5a1b-4ea1-8520-03a174611a2a",
          "title": "Data Entry through the Data Collection Instrument",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "522c2163-e0d0-40f6-8227-53a936db1032",
              "title": "Record Status Dashboard",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should display a listing of all existing records",
                  "fullTitle": "Data Entry through the Data Collection Instrument Record Status Dashboard Should display a listing of all existing records",
                  "timedOut": null,
                  "duration": 13477,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('table#record_status_table').should(function ($table) {\n  expect($table).to.contain('No records exist');\n});",
                  "err": {},
                  "uuid": "a45a5d8a-4fcb-4dff-b37f-59c78115b831",
                  "parentUUID": "522c2163-e0d0-40f6-8227-53a936db1032",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should display a listing with the appropriate form statuses",
                  "fullTitle": "Data Entry through the Data Collection Instrument Record Status Dashboard Should display a listing with the appropriate form statuses",
                  "timedOut": null,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('table#record_status_table').should(function ($table) {\n  expect($table).to.contain('Demographics');\n  expect($table).to.contain('Baseline Data');\n  expect($table).to.contain('Month 1 Data');\n  expect($table).to.contain('Month 2 Data');\n  expect($table).to.contain('Month 3 Data');\n  expect($table).to.contain('Completion Data');\n});",
                  "err": {},
                  "uuid": "dfa4849d-edc3-490a-b03f-77ccec12204f",
                  "parentUUID": "522c2163-e0d0-40f6-8227-53a936db1032",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a45a5d8a-4fcb-4dff-b37f-59c78115b831",
                "dfa4849d-edc3-490a-b03f-77ccec12204f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13515,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "77e48307-0667-43f7-805a-1b31383aa031",
              "title": "Entering Data",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should have the ability to create a record",
                  "fullTitle": "Data Entry through the Data Collection Instrument Entering Data Should have the ability to create a record",
                  "timedOut": null,
                  "duration": 2286,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('table#event_grid_table tbody td a').first().click();\ncy.get('button').contains('Save & Exit Form').click();\ncy.get('body').should(function ($body) {\n  expect($body).to.contain('Study ID 1 successfully added');\n});",
                  "err": {},
                  "uuid": "5a485a5e-af0b-42ba-a050-eb40fa106ea9",
                  "parentUUID": "77e48307-0667-43f7-805a-1b31383aa031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should have the ability to enter data for core field types",
                  "fullTitle": "Data Entry through the Data Collection Instrument Entering Data Should have the ability to enter data for core field types",
                  "timedOut": null,
                  "duration": 3521,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('table#event_grid_table tbody td a').first().click();\ncy.select_text_by_label('Date subject signed consent').type('01/01/2019');\ncy.select_text_by_label('First Name').type('Rosie');\ncy.select_text_by_label('Last Name').type('Riveter');\ncy.select_textarea_by_label('Street, City, State, ZIP').type(\"555 Fake Address\\nBeverly Hills, CA 90210\");\ncy.select_radio_by_label('Ethnicity').first().click();\ncy.select_radio_by_label('Sex').first().click();\ncy.select_field_by_label('Race').select('Asian');\ncy.select_checkbox_by_label('Is patient taking any of the following medications? (check all that apply)').first().check();\ncy.select_field_by_label('Complete?').select('Complete');\ncy.get('button').contains('Save & Exit Form').click();\ncy.get('body').should(function ($body) {\n  expect($body).to.contain('Study ID 1 successfully edited');\n});",
                  "err": {},
                  "uuid": "603a270c-3a7c-4da2-ad3d-cc9a70c8d30c",
                  "parentUUID": "77e48307-0667-43f7-805a-1b31383aa031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should have the ability to reset a multiple-choice radio button selection",
                  "fullTitle": "Data Entry through the Data Collection Instrument Entering Data Should have the ability to reset a multiple-choice radio button selection",
                  "timedOut": null,
                  "duration": 534,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('table#event_grid_table tbody td a').first().click();\ncy.select_radio_by_label('Ethnicity').parent().parent().should(function ($td) {\n  var $a = $td.find('> div a');\n  var $reset_exists = expect($a).to.contain('reset');\n  if ($reset_exists) $a.click();\n});",
                  "err": {},
                  "uuid": "b5c471a0-ed6d-40b1-b371-ff9308d5d05b",
                  "parentUUID": "77e48307-0667-43f7-805a-1b31383aa031",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "e6af8804-9596-4f3c-a9c3-8d111e4cf469",
                  "title": "Date / Time Fields",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Should display a date picker widget on a date field",
                      "fullTitle": "Data Entry through the Data Collection Instrument Entering Data Date / Time Fields Should display a date picker widget on a date field",
                      "timedOut": null,
                      "duration": 274,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('img.ui-datepicker-trigger').click({\n  multiple: true\n});",
                      "err": {},
                      "uuid": "5a1df1f8-e0fc-4da4-b484-8d9c76b27aac",
                      "parentUUID": "e6af8804-9596-4f3c-a9c3-8d111e4cf469",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should display a Today button",
                      "fullTitle": "Data Entry through the Data Collection Instrument Entering Data Date / Time Fields Should display a Today button",
                      "timedOut": null,
                      "duration": 698,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Today');\n});\ncy.get('button').contains('Save & Exit Form').click();\ncy.get('body').should(function ($body) {\n  expect($body).to.contain('Study ID 1 successfully edited');\n});",
                      "err": {},
                      "uuid": "1971ad24-fd75-4bdb-a9a5-01fa6d76d9c6",
                      "parentUUID": "e6af8804-9596-4f3c-a9c3-8d111e4cf469",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5a1df1f8-e0fc-4da4-b484-8d9c76b27aac",
                    "1971ad24-fd75-4bdb-a9a5-01fa6d76d9c6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 972,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "5a485a5e-af0b-42ba-a050-eb40fa106ea9",
                "603a270c-3a7c-4da2-ad3d-cc9a70c8d30c",
                "b5c471a0-ed6d-40b1-b371-ff9308d5d05b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6341,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "546eb89d-1d61-408f-83d4-e77bff86ecba",
              "title": "Saving Data",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "91be3e45-643b-455b-838d-ed959dacebe5",
                  "title": "Attempted Leave without Save Prompt",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Should prompt to save when an attempt to navigate away from a data entry page without saving",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Attempted Leave without Save Prompt Should prompt to save when an attempt to navigate away from a data entry page without saving",
                      "timedOut": null,
                      "duration": 1715,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('a').contains('Project Setup').click({\n  force: true\n});\ncy.get('div#stayOnPageReminderDialog').should(function ($div) {\n  expect($div).to.contain('If you have made any data changes on this page, they will be lost if you leave without saving them');\n});",
                      "err": {},
                      "uuid": "88f63849-2ece-40d8-b655-dda98c92c230",
                      "parentUUID": "91be3e45-643b-455b-838d-ed959dacebe5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should provide the ability to save changes and leave",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Attempted Leave without Save Prompt Should provide the ability to save changes and leave",
                      "timedOut": null,
                      "duration": 65,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Save changes and leave');\n});",
                      "err": {},
                      "uuid": "5114ec6b-ab8c-4de8-ad66-43e99fe80589",
                      "parentUUID": "91be3e45-643b-455b-838d-ed959dacebe5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should provide the ability to leave without saving changes",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Attempted Leave without Save Prompt Should provide the ability to leave without saving changes",
                      "timedOut": null,
                      "duration": 53,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Leave without saving changes');\n});",
                      "err": {},
                      "uuid": "9bbfff66-bcef-44a6-a21e-d00ac2317617",
                      "parentUUID": "91be3e45-643b-455b-838d-ed959dacebe5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should provide the ability to stay on the page",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Attempted Leave without Save Prompt Should provide the ability to stay on the page",
                      "timedOut": null,
                      "duration": 86,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Stay on page');\n});",
                      "err": {},
                      "uuid": "4e041266-9215-4728-a602-fa5e88802349",
                      "parentUUID": "91be3e45-643b-455b-838d-ed959dacebe5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "88f63849-2ece-40d8-b655-dda98c92c230",
                    "5114ec6b-ab8c-4de8-ad66-43e99fe80589",
                    "9bbfff66-bcef-44a6-a21e-d00ac2317617",
                    "4e041266-9215-4728-a602-fa5e88802349"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1919,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "bf83da50-7de6-492d-a4ca-2d5cf1aac45c",
                  "title": "Save Options",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Should have the ability to save and exit the form",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Save Options Should have the ability to save and exit the form",
                      "timedOut": null,
                      "duration": 165,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Save & Exit Form');\n});",
                      "err": {},
                      "uuid": "72fcd571-4574-461a-b006-2e603794702f",
                      "parentUUID": "bf83da50-7de6-492d-a4ca-2d5cf1aac45c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to save and continue on the same form for the same record",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Save Options Should have the ability to save and continue on the same form for the same record",
                      "timedOut": null,
                      "duration": 371,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('div').should(function ($li) {\n  expect($li).to.contain('Save & Stay');\n});",
                      "err": {},
                      "uuid": "a5d3c3c3-1be5-4ad0-83bd-e236bb507ed9",
                      "parentUUID": "bf83da50-7de6-492d-a4ca-2d5cf1aac45c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to save and go to the next form for the same record",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Save Options Should have the ability to save and go to the next form for the same record",
                      "timedOut": null,
                      "duration": 275,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('div').should(function ($li) {\n  expect($li).to.contain('Save & Go To Next Form');\n});",
                      "err": {},
                      "uuid": "01a91652-fbee-4e49-bc8d-e2799df056e7",
                      "parentUUID": "bf83da50-7de6-492d-a4ca-2d5cf1aac45c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to cancel the data entered and leave the record",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Save Options Should have the ability to cancel the data entered and leave the record",
                      "timedOut": null,
                      "duration": 77,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('-- Cancel --');\n});",
                      "err": {},
                      "uuid": "51ca6393-d79f-4beb-86a6-f7d967e1e737",
                      "parentUUID": "bf83da50-7de6-492d-a4ca-2d5cf1aac45c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "72fcd571-4574-461a-b006-2e603794702f",
                    "a5d3c3c3-1be5-4ad0-83bd-e236bb507ed9",
                    "01a91652-fbee-4e49-bc8d-e2799df056e7",
                    "51ca6393-d79f-4beb-86a6-f7d967e1e737"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 888,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "60babef8-6eb5-426f-a34e-82b4e27d54bc",
                  "title": "Form Statuses",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Should have the ability to mark the form as Incomplete (with data)",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Form Statuses Should have the ability to mark the form as Incomplete (with data)",
                      "timedOut": null,
                      "duration": 244,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('select').contains('Incomplete').parent().select('Incomplete');",
                      "err": {},
                      "uuid": "cc5c428a-3f00-45b9-a8c6-781cf86be34c",
                      "parentUUID": "60babef8-6eb5-426f-a34e-82b4e27d54bc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to mark the form as Incomplete (no saved data)",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Form Statuses Should have the ability to mark the form as Incomplete (no saved data)",
                      "timedOut": null,
                      "duration": 457,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('[type=\"checkbox\"]').uncheck();\ncy.get('select').contains('Incomplete').parent().select('Incomplete');",
                      "err": {},
                      "uuid": "6192908d-1e91-4ebf-9557-87d9666da890",
                      "parentUUID": "60babef8-6eb5-426f-a34e-82b4e27d54bc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to mark the form as Unverified",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Form Statuses Should have the ability to mark the form as Unverified",
                      "timedOut": null,
                      "duration": 179,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('select').contains('Unverified').parent().select('Unverified');",
                      "err": {},
                      "uuid": "917a4f64-1e63-4001-b8f4-40f09bfe1c67",
                      "parentUUID": "60babef8-6eb5-426f-a34e-82b4e27d54bc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Should have the ability to mark the form as Complete",
                      "fullTitle": "Data Entry through the Data Collection Instrument Saving Data Form Statuses Should have the ability to mark the form as Complete",
                      "timedOut": null,
                      "duration": 181,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('select').contains('Complete').parent().select('Complete');",
                      "err": {},
                      "uuid": "d67b9e3f-5cc8-42fe-b53e-879036ee6d25",
                      "parentUUID": "60babef8-6eb5-426f-a34e-82b4e27d54bc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cc5c428a-3f00-45b9-a8c6-781cf86be34c",
                    "6192908d-1e91-4ebf-9557-87d9666da890",
                    "917a4f64-1e63-4001-b8f4-40f09bfe1c67",
                    "d67b9e3f-5cc8-42fe-b53e-879036ee6d25"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1061,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c73bc43d-5534-4047-94b4-56b402d551de",
              "title": "Deleting Data",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should have the ability to delete all data on the current form of a given record",
                  "fullTitle": "Data Entry through the Data Collection Instrument Deleting Data Should have the ability to delete all data on the current form of a given record",
                  "timedOut": null,
                  "duration": 3698,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('button').should(function ($btn) {\n  expect($btn).to.contain('Delete data for THIS FORM only');\n});",
                  "err": {},
                  "uuid": "4bed0bd9-c210-48e7-be72-3fa457bbfed3",
                  "parentUUID": "c73bc43d-5534-4047-94b4-56b402d551de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should have the ability to delete an individual record",
                  "fullTitle": "Data Entry through the Data Collection Instrument Deleting Data Should have the ability to delete an individual record",
                  "timedOut": null,
                  "duration": 839,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('div').contains('Save & Exit Form').click({\n  force: true\n});\ncy.get('li').should(function ($li) {\n  expect($li).to.contain('Delete record (all forms)');\n});",
                  "err": {},
                  "uuid": "3c6b7fd9-bf5d-4517-8ced-41200897c9e7",
                  "parentUUID": "c73bc43d-5534-4047-94b4-56b402d551de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should have the ability to delete all data in an event for a given record",
                  "fullTitle": "Data Entry through the Data Collection Instrument Deleting Data Should have the ability to delete all data in an event for a given record",
                  "timedOut": null,
                  "duration": 376,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit_version({\n  page: 'DataEntry/record_home.php',\n  params: \"pid=1&arm=1&id=1\"\n});\ncy.get('ul li').contains('Delete record (all forms)');",
                  "err": {},
                  "uuid": "4937e0c8-c208-41b3-9adf-16435e58cfe6",
                  "parentUUID": "c73bc43d-5534-4047-94b4-56b402d551de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bed0bd9-c210-48e7-be72-3fa457bbfed3",
                "3c6b7fd9-bf5d-4517-8ced-41200897c9e7",
                "4937e0c8-c208-41b3-9adf-16435e58cfe6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4913,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}